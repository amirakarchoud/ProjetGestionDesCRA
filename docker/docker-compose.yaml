services:

  mongo:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: cra
    volumes:
      - './init.db.js:/docker-entrypoint-initdb.d/init.db.js'
    networks:
      cra_net:
        ipv4_address: 172.28.0.3

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
    networks:
      cra_net:
        ipv4_address: 172.28.0.4

  backend:
    image: node:18-alpine3.17
    profiles:
      - back
    depends_on:
      mongo:
        condition: service_healthy
    volumes:
      - ../back:/build
    environment:
      NODE_ENV: "docker"
    expose:
      - 8080:8080
    command:
      - /bin/sh
      - -c
      - |
        cd /build && \
        npm i && \
        npm run start
    networks:
      - cra_net

  frontend:
    image: node:18-alpine3.17
    profiles:
      - front
    volumes:
      - ../front:/build
    expose:
      - 3000:3000
    command:
      - /bin/sh
      - -c
      - |
        cd /build && \
        npm i && \
        npm run start_docker
    networks:
      - cra_net

networks:
  cra_net:
    ipam:
      config:
        - subnet: 172.28.0.0/16
          ip_range: 172.28.0.16/16
