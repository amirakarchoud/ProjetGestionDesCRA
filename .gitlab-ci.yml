# Author: Boualleiguie Adam Isslem

include: gitlab-includes.yml

image: gitlab-registry.proxym-group.net/docker/node:18.17

default:
  tags:
    - docker

stages:
  - build
  - dockerize
  - confirm-dev
  - integration-test
  - deploy

######################################################################################################################
# build section

build_backend:
  stage: build
  before_script:
    - !reference [ .nexus_auth, before_script ]
  script:
    - export CI=false
    - npm ci
    - echo "${CI_COMMIT_MESSAGE}" | npx commitlint
    - npm run lint
    - cd $CI_PROJECT_DIR/back
    - npm ci
    - npm run build:prod
    - npm run test
    - npm ci --omit=dev
  artifacts:
    untracked: false
    when: on_success
    expire_in: "1 hours"
    paths:
      - "$CI_PROJECT_DIR/back/node_modules"
      - "$CI_PROJECT_DIR/back/dist"
      - "$CI_PROJECT_DIR/ci_configs"

#build_frontend:
#  stage: build
#  before_script:
#    - !reference [.nexus_auth, before_script]
#  script:
#    - export CI=false
#    - cd $CI_PROJECT_DIR/front
#    - npm ci
#    - npm run build
#  artifacts:
#    untracked: false
#    when: on_success
#    expire_in: "1 hours"
#    paths:
#      - "$CI_PROJECT_DIR/front/build"
#      - "$CI_PROJECT_DIR/ci_configs"
#  rules:
#    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH || $CI_COMMIT_BRANCH =~ /^(fix|hotfix|release)\/.*/i
#      changes:
#        - front/**/*
#

######################################################################################################
# dockerise section

dockerise_backend:
  stage: dockerize
  extends: .dockerise
  variables:
    IMAGE_NAME: backend
  needs:
    - build_backend
  artifacts:
    untracked: false
    when: on_success
    expire_in: "1 hours"
    paths:
      - $CI_PROJECT_DIR/ci_configs
  rules:
    # specify branch
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH || $CI_COMMIT_BRANCH =~ /^(fix|hotfix|release)\/.*/i
      variables:
        TAG: dev
        DOCKER_FILE_PATH: ci_configs/Dockerfiles/Dockerfile_back

#dockerise_frontend:
#  stage: dockerize
#  extends: .dockerise
#  variables:
#    IMAGE_NAME: frontend
#  needs:
#    - job: build_frontend
#      artifacts: true
#  artifacts:
#    untracked: false
#    when: on_success
#    expire_in: "1 hours"
#    paths:
#      - $CI_PROJECT_DIR/ci_configs
#  rules:
#    # specify branch
#    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH || $CI_COMMIT_BRANCH =~ /^(fix|hotfix|release)\/.*/i
#      variables:
#        TAG: dev
#        DOCKER_FILE_PATH: ci_configs/Dockerfiles/Dockerfile_front
#      changes:
#        - front/**/*

confirm_dev:
  extends: .confirm
  stage: confirm-dev
  needs:
    - dockerise_backend

integration_test:
  stage: integration-test
  needs:
    - confirm_dev
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      when: on_success
    - if: $CI_COMMIT_BRANCH =~ /^(fix|hotfix|release)\/.*/i
      when: on_success
    - when: never
  services:
    - mongo
  variables:
    MONGO_INITDB_DATABASE: cra
    MONGO_INITDB_ROOT_USERNAME: root
    MONGO_INITDB_ROOT_PASSWORD: example
    MONGO_URI: mongodb://root:example@mongo
  script:
    - export CI=false
    - cd $CI_PROJECT_DIR/back
    - npm ci
    - npm run test:e2e

######################################################################################################
# deploy section

deploy_backend:
  stage: deploy
  extends: .k8s_deploy
  variables:
    GIT_STRATEGY: none
    PROJECT: backend
  needs:
    - integration_test
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH || $CI_COMMIT_BRANCH =~ /^(fix|hotfix|release)\/.*/i
      variables:
        VALUES_PATH: ci_configs/k8s/backend/values-dev.yml
        ENV: dev

#
#deploy_frontend:
#  stage: deploy
#  extends: .k8s_deploy
#  variables:
#    GIT_STRATEGY: none
#    PROJECT: frontend
#  needs:
#    - job: integration_test
#      artifacts: true
#  rules:
#    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH || $CI_COMMIT_BRANCH =~ /^(fix|hotfix|release)\/.*/i
#      variables:
#        VALUES_PATH: ci_configs/k8s/frontend/values-dev.yml
#        ENV: dev
#      changes:
#        - front/**/*
